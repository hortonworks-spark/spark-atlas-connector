From a0505e4c89c969eca10bdd28aa138e43a050be66 Mon Sep 17 00:00:00 2001
From: "Jungtaek Lim (HeartSaVioR)" <kabhwan@gmail.com>
Date: Fri, 11 Jan 2019 11:42:20 +0900
Subject: [PATCH] Custom modification of spark-sql-kafka module for Spark Atlas
 Connector

* The patch is needed to extract topics as well as custom Atlas cluster name
---
 .../scala/org/apache/spark/sql/kafka010/KafkaRelation.scala   | 4 ++--
 .../scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala  | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala b/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala
index e6f9d1259e43e..3a3e294827898 100644
--- a/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala
+++ b/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala
@@ -33,9 +33,9 @@ import org.apache.spark.unsafe.types.UTF8String
 
 private[kafka010] class KafkaRelation(
     override val sqlContext: SQLContext,
-    strategy: ConsumerStrategy,
+    val strategy: ConsumerStrategy,
     sourceOptions: Map[String, String],
-    specifiedKafkaParams: Map[String, String],
+    val specifiedKafkaParams: Map[String, String],
     failOnDataLoss: Boolean,
     startingOffsets: KafkaOffsetRangeLimit,
     endingOffsets: KafkaOffsetRangeLimit)
diff --git a/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala b/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala
index f8b90056d2931..42138b01e19ce 100644
--- a/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala
+++ b/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala
@@ -60,7 +60,7 @@ private[kafka010] case class KafkaSourceRDDPartition(
  */
 private[kafka010] class KafkaSourceRDD(
     sc: SparkContext,
-    executorKafkaParams: ju.Map[String, Object],
+    val executorKafkaParams: ju.Map[String, Object],
     offsetRanges: Seq[KafkaSourceRDDOffsetRange],
     pollTimeoutMs: Long,
     failOnDataLoss: Boolean,
